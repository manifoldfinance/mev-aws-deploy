version: 2

references:

  container_config: &container_config
    docker:
      - image: circleci/python:3.7.8
    working_directory: ~/repo

  setup_role_arn: &setup_role_arn
    run:
      name: setup role arn
      command: echo "export ROLE_ARN=arn:aws:iam::$ACCOUNT_ID:role/ServerlessDeployment" >> $BASH_ENV

  assume_role: &assume_role
    run:
      name: assume role and export configs
      command: |
        CREDENTIALS="$(aws sts assume-role --role-arn $ROLE_ARN --role-session-name build-$CIRCLE_PROJECT_REPONAME-$CIRCLE_BUILD_NUM | jq '.Credentials')"
        echo "export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.AccessKeyId')" >> $BASH_ENV
        echo "export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.SecretAccessKey')" >> $BASH_ENV
        echo "export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.SessionToken')" >> $BASH_ENV


jobs:
  sync_cloudformation:
    <<: *container_config
    steps:
      - checkout:
          path: ~/repo
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: install pip and aws cli
          command: |
            sudo apt-get install python3 python3-dev python3-pip
            sudo pip3 install awscli --upgrade
      - *setup_role_arn
      - *assume_role
      - run:
          name: deploy the code
          command: |
            aws s3 cp cloudformation.yml s3://manifold.sfo2.digitaloceanspaces.com/cloudformation/2021/geth/cloudformation.yml  --acl public-read

workflows:
  version: 2
  build_deploy:
    jobs:
      - sync_cloudformation:
          context: Production
          filters:
            branches:
              only:
                - master
